;#include <mega328p.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <stdlib.h>
;#include <delay.h>
;#include <twi2.h>

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;	data -> Y+0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;	ack -> Y+0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;#include <i2c_lcd.c>
;#define lcdw 0b01001110
;#define lcdr 0b01001111
;
;#define en   0b00000100
;#define rw   0b00000010
;#define rs   0b00000001
;#define backon 0x08
;#define backoff 0x00
;
;//unsigned char kolom_lcd=16;
;unsigned char baris_lcd=2;
;//unsigned char charsize=0;
;unsigned char display_control;
;unsigned char display_mode;
;
;void expander_write(unsigned char data){
; 0000 0006 void expander_write(unsigned char data){
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;twistart();
;PCODE: $00000061 VOL: 0
;	data -> Y+0
;PCODE: $00000062 VOL: 0
;twiwrite(lcdw);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;twiwrite(data | backon);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;twiwrite(0xff);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;twistop();
;PCODE: $0000006B VOL: 0
;}
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;
;void pulse_enable(unsigned char data){
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;expander_write(data | en);
;PCODE: $00000071 VOL: 0
;	data -> Y+0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;delay_us(1);
;PCODE: $00000076 VOL: 0
;expander_write(data & ~en);
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;delay_us(50);
;PCODE: $0000007B VOL: 0
;}
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;
;void write4bits(unsigned char data){
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;expander_write(data);
;PCODE: $00000081 VOL: 0
;	data -> Y+0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;pulse_enable(data);
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;}
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;
;void send(unsigned char data,unsigned char mode){
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;unsigned char high=data&0xf0;
;unsigned char low=(data<<4)&0xf0;
;write4bits((high)|mode);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;	data -> Y+3
;	mode -> Y+2
;	high -> R17
;	low -> R16
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;write4bits((low)|mode);
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;}
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;
;void command(unsigned char data){
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;send(data,0);
;PCODE: $000000A4 VOL: 0
;	data -> Y+0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;}
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;
;void write(char data){
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;send(data,rs);
;PCODE: $000000AE VOL: 0
;	data -> Y+0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;}
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;
;void clear(){
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;command(0x01); //lcd clear display command
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;delay_ms(2);
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;}
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;
;void display(){
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;    display_control|=0x04;//lcd display on
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;    command(0x08 | display_control); //0x08=lcd display control
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;}
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;
;void home(){
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;    command(0x02); // lcd kembali ke posisi 0,0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;    delay_ms(2);
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;}
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;
;void gotoxy(unsigned char x,unsigned char y){
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;    int row_offsets[]={0x00,0x40,0x14,0x54};
;    if(y>baris_lcd)y=baris_lcd-1;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;	x -> Y+9
;	y -> Y+8
;	row_offsets -> Y+0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;    command(0x80|(x+row_offsets[y])); //0x80 = alamat ddram lcd
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;}
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;
;void lcd_begin(){
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;//4 bit mode ,  lcd 1 line , lcd 5x8 per karakter
;unsigned char displayfunction = 0x00 | 0x00 | 0x00;
;if(baris_lcd>1)displayfunction |= 0x08; //2 line lcd
;PCODE: $000000FE VOL: 0
;	displayfunction -> R17
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;
;delay_ms(50);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;
;expander_write(backon);
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;delay_ms(1000);
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;
;write4bits(0x03<<4);
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;delay_us(4500);
;PCODE: $00000110 VOL: 0
;write4bits(0x03<<4);
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;delay_us(4500);
;PCODE: $00000113 VOL: 0
;write4bits(0x03<<4);
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;delay_us(150);
;PCODE: $00000116 VOL: 0
;write4bits(0x02 << 4);
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;command(0x20|displayfunction); //0x20 lcd function set
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;
;// lcd display on, lcd cursor off, lcd blink off
;display_control= 0x04 | 0x00 | 0x00;
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;display();
;PCODE: $0000011F VOL: 0
;
;clear();
;PCODE: $00000120 VOL: 0
;
;//lcd entryleft , lcd entry decrement
;display_mode=0x02|0x00;
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;command(0x04|display_mode); //0x04 = lcd entry modeset
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;
;home();
;PCODE: $00000127 VOL: 0
;}
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;
;void put(char *teks){
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;char k;
;while (k=*teks++)write(k);
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;	*teks -> Y+1
;	k -> R17
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;
;
;unsigned char baca_keypad();
;
;void main(void){
; 0000 000A void main(void){
;PCODE: $0000013F VOL: 0
; 0000 000B unsigned char buf[16];
; 0000 000C #pragma optsize-
; 0000 000D CLKPR=0x80;
;PCODE: $00000140 VOL: 0
;	buf -> Y+0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 000E CLKPR=0x00;
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 000F #ifdef _OPTIMIZE_SIZE_
; 0000 0010 #pragma optsize+
; 0000 0011 #endif
; 0000 0012 
; 0000 0013 twiinit();
;PCODE: $00000145 VOL: 0
; 0000 0014 lcd_begin();
;PCODE: $00000146 VOL: 0
; 0000 0015 gotoxy(0,0);
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 0016 put("BY :");
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 0017 gotoxy(0,1);
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 0018 put("AI-ELEKTRONIK");
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 0019 delay_ms(1000);
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 001A clear();
;PCODE: $00000157 VOL: 0
; 0000 001B while (1){
;PCODE: $00000158 VOL: 0
; 0000 001C 
; 0000 001D buf[0]=baca_keypad();buf[1]='\0';
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 001E gotoxy(0,0);put(buf);
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 001F }
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 0020 }
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0

	.DSEG
_0x19:
	.BYTE 0x13
;
;unsigned char baca_keypad(){
; 0000 0022 unsigned char baca_keypad(){

	.CSEG
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 0023 unsigned char key;
; 0000 0024 twistart();
;PCODE: $0000016B VOL: 0
;	key -> R17
;PCODE: $0000016C VOL: 0
; 0000 0025 twiwrite(0b01001110);
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 0026 twiwrite(0x00);
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 0027 twiwrite(0xf6);
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 0028 twistop();
;PCODE: $00000173 VOL: 0
; 0000 0029 
; 0000 002A twistart();
;PCODE: $00000174 VOL: 0
; 0000 002B twiwrite(0b01001111);
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 002C twiread(1);
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 002D key=twiread(0);
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 002E twistop();
;PCODE: $0000017C VOL: 0
; 0000 002F 
; 0000 0030 if( ((key>>4)&1)==0)return '1';
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 0031 if( ((key>>5)&1)==0)return '4';
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 0032 if( ((key>>6)&1)==0)return '7';
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 0033 if( ((key>>7)&1)==0)return '*';
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 0034 
; 0000 0035 twistart();
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 0036 twiwrite(0b01001110);
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0000 0037 twiwrite(0x00);
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 0038 twiwrite(0xf5);
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 0039 twistop();
;PCODE: $000001AB VOL: 0
; 0000 003A 
; 0000 003B twistart();
;PCODE: $000001AC VOL: 0
; 0000 003C twiwrite(0b01001111);
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 003D twiread(1);
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 003E key=twiread(0);
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 003F twistop();
;PCODE: $000001B4 VOL: 0
; 0000 0040 
; 0000 0041 if( ((key>>4)&1)==0)return '2';
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 0042 if( ((key>>5)&1)==0)return '5';
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0000 0043 if( ((key>>6)&1)==0)return '8';
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 0044 if( ((key>>7)&1)==0)return '0';
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 0045 
; 0000 0046 twistart();
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 0047 twiwrite(0b01001110);
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 0048 twiwrite(0x00);
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0000 0049 twiwrite(0xf3);
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 004A twistop();
;PCODE: $000001E3 VOL: 0
; 0000 004B 
; 0000 004C twistart();
;PCODE: $000001E4 VOL: 0
; 0000 004D twiwrite(0b01001111);
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
; 0000 004E twiread(1);
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0000 004F key=twiread(0);
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0000 0050 twistop();
;PCODE: $000001EC VOL: 0
; 0000 0051 
; 0000 0052 if( ((key>>4)&1)==0)return '3';
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 0053 if( ((key>>5)&1)==0)return '6';
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 0054 if( ((key>>6)&1)==0)return '9';
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
; 0000 0055 if( ((key>>7)&1)==0)return '#';
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 0056 
; 0000 0057 return 'x';
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0000 0058 }
;PCODE: $00000217 VOL: 0
